<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>Admin — Newsletter</title>
  <%- include("includes/head") %>
  <meta name="robots" content="noindex,nofollow">
  <style>
    .editor-grid { display:grid; grid-template-columns: 1fr 1fr; gap:18px; align-items:start; }
    .editor-grid .pane { background:#fffaf1; border:1px solid #e3d9c6; border-radius:8px; padding:12px; }
    .editor-grid textarea { width:100%; min-height:380px; font-family:ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace; font-size:14px; line-height:1.4; }
    iframe.preview { width:100%; height:420px; border:1px solid #e3d9c6; border-radius:8px; background:#fff; }
    .row { display:flex; gap:12px; align-items:center; flex-wrap:wrap; }
    .muted { color: var(--muted, #7a7a7a); }
    .pill { background:#fff3df; color:#6e3b16; border:1px solid #f0d7ac; border-radius:999px; padding:4px 10px; font-size:12px; }
    .stat { display:flex; gap:8px; align-items:center; }
  </style>
</head>
<body>
<header class="topbar">
  <%- include("includes/header") %>
</header>

<main class="container">
  <section class="hero" style="padding-top:24px;">
    <div class="pill">Admin</div>
    <h1>Newsletter</h1>
    <p class="section-sub">
      Subscribers: <strong><%= subsCount %></strong>
    </p>
  </section>

  <section class="mt-2">
    <form id="nlForm" class="pane" style="padding:16px;">
      <label for="nlSubject"><small>Subject</small></label>
      <input id="nlSubject" name="subject" type="text" required
             value="<%- defaultSubject %>"
             style="display:block;width:100%;padding:10px;border:1px solid #ccc;border-radius:6px;margin:6px 0 12px;"/>

      <div class="editor-grid">
        <div class="pane">
          <div class="row" style="justify-content:space-between;">
            <label for="nlHtml"><small>HTML</small></label>
            <span class="muted"><small>Tip: paste HTML or type; preview updates live</small></span>
          </div>
          <textarea id="nlHtml" name="html"><%- defaultHtml %></textarea>
        </div>

        <div class="pane">
          <div class="row" style="justify-content:space-between;">
            <div><small>Preview</small></div>
            <span class="muted"><small>This shows your HTML content (email template wrapping happens on send)</small></span>
          </div>
          <iframe class="preview" id="nlPreview"></iframe>
        </div>
      </div>

      <div class="row" style="margin-top:14px;">
        <button type="submit" class="btn btn-primary" id="sendBtn">Send to all subscribers</button>
        <span id="status" class="muted"></span>
      </div>
    </form>
  </section>
</main>

<script>
  const form = document.getElementById("nlForm");
  const subjectEl = document.getElementById("nlSubject");
  const htmlEl = document.getElementById("nlHtml");
  const preview = document.getElementById("nlPreview");
  const statusEl = document.getElementById("status");
  const sendBtn = document.getElementById("sendBtn");

  function updatePreview() {
    // Render just the raw HTML the user wrote—your server wraps it in the brand template on send.
    const content = htmlEl.value;
    const doc = `<!doctype html><meta charset="utf-8">
      <style>body{font:14px/1.5 Arial,Helvetica,sans-serif; padding:14px;}</style>
      ${content}`;
    preview.srcdoc = doc;
  }
  htmlEl.addEventListener("input", updatePreview);
  updatePreview();

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    statusEl.textContent = "Starting send… (this can take a while)";
    sendBtn.disabled = true;

    try {
      const res = await fetch("/admin/newsletter/send", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          subject: subjectEl.value,
          html: htmlEl.value
        })
      });
      const data = await res.json();
      if (!res.ok || !data.ok) {
        statusEl.textContent = data.message || "Failed to send.";
      } else {
        statusEl.textContent = `Done. Sent: ${data.sent} • Failed: ${data.failed} • Total: ${data.total}`;
      }
    } catch (err) {
      statusEl.textContent = "Network error sending newsletter.";
    } finally {
      sendBtn.disabled = false;
    }
  });
</script>
</body>
</html>
